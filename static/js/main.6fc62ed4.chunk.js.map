{"version":3,"sources":["components/modal/modal.module.scss","components/if/index.js","components/modal/index.js","components/hooks/form.js","components/header/header.js","components/footer/footer.js","components/pagination/pagination.js","components/context/setting.js","components/todo/todo-connected.js","app.js","index.js"],"names":["module","exports","render","condition","children","When","props","Modal","className","styles","modal","title","onClick","close","useForm","callback","useState","values","setValues","event","preventDefault","target","reset","onChange","persist","name","value","console","log","Header","todoList","filter","item","complete","length","Footer","date","Date","toDateString","Pagination","postsPerPage","totalPosts","paginate","curent","pageNumbers","i","Math","ceil","push","map","number","key","href","SettingsContext","React","createContext","SettingProvider","display","setDisplay","currentPage","setCurrentPage","state","changeDisplay","changeCurrentPage","Provider","todoAPI","Todo2","context","useContext","callAPI","newItem","setTodoList","handleSubmit","handleChange","showDetails","setShowDetails","details","setDetails","url","method","body","handler","errorHandler","fetch","mode","cache","headers","JSON","stringify","undefined","then","response","json","data","catch","e","error","toggleComplete","id","updatedItem","_id","toggleDetails","showDetails1","details1","indexOfLastPost","indexOfFirstPost","currentPosts","slice","useEffect","results","onSubmit","placeholder","type","min","max","defaultValue","toString","text","pageNumber","assignee","due","App","Component","Main","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.6fc62ed4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__2bhYs\"};","import React from 'react';\n\nconst render = (condition = false, children = null) => {\n  return condition ? children : null;\n};\n\nexport const If = props =>\n  React.Children.map(props.children, child =>\n    React.cloneElement(child, { condition: props.condition }),\n  );\n\nexport const Then = props => render(props.condition, props.children);\nexport const Else = props => render(!props.condition, props.children);\n\n/*\n<When condition={true}>\n  <h2>When Works</h2>\n</When>\n*/\nexport const When = props => render(props.condition, props.children);\n\n/*\n<Unless condition={administrator}>\n  Pay more $$ and we will make you an admin\n</Unless>\n*/\nexport const Unless = props => render(!props.condition, props.children);\n","import React from 'react';\n\nimport styles from './modal.module.scss';\n\nconst Modal = props => {\n  return (\n    <div className={styles.modal}>\n      <div>\n        <header>\n          <span className=\"title\">{props.title}</span>\n          <button onClick={props.close}>X</button>\n        </header>\n        <div>{props.children}</div>\n      </div>\n    </div>\n  );\n};\nexport default Modal;\n","import { useState } from 'react';\n\nconst useForm = (callback) => {\n  const [values, setValues] = useState({});\n\n  const handleSubmit = (event) => {\n    if (event){\n      event.preventDefault();\n      event.target.reset();\n    }\n\n    callback(values);\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues(values => ({...values, [event.target.name] : event.target.value }));\n    console.log('values : ', values);\n  };\n\n  const handleInput = {\n    onChange: (event) => {\n      event.persist();\n      setValues(values => ({...values, [event.target.name] : event.target.value }));\n    },\n  };\n\n  return [handleSubmit, handleInput, handleChange, values];\n};\n\nexport default useForm;","import React, { useState } from 'react';\n\nconst Header = props => {\n\n\n  return(\n    <header>\n      <h2>\n        <p>There are</p> \n        {props.todoList.filter( item => !item.complete ).length}\n        \" Items To Complete\n      </h2>\n    </header>\n  );\n};\n\nexport default Header;","import React, { useState } from 'react';\n\nconst Footer = props => {\n\n  let date = new Date().toDateString();\n  return(\n    <footer>\n      <p>{date}</p>\n      <h3>\n       By obada Q 2020\n      </h3>\n    </footer>\n  );\n};\n\nexport default Footer;","import React from 'react';\n\nconst Pagination = ({ postsPerPage, totalPosts, paginate ,curent}) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n  const next = ()=>{\n    if(curent + 1 <= pageNumbers.length) paginate(curent + 1);\n  };\n  const prev = ()=>{\n    if(curent - 1 > 0) paginate(curent - 1);\n\n  };\n  return (\n    <nav>\n      <ul className='pagination'>\n        {pageNumbers.map(number => (\n          <li key={number} className='page-item'>\n            <a onClick={() => paginate(number)} href='!#' className='page-link'>\n              {number}\n            </a>\n          </li>\n        ))}\n      </ul>\n      <button onClick={prev}>previus</button>\n      <button onClick={next}>next</button>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import React, {useState} from 'react';\n\nexport const SettingsContext = React.createContext();\n\nfunction SettingProvider(props) {\n  const [display, setDisplay] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(5);\n  const state = {\n    display,\n    currentPage,\n    postsPerPage,\n    changeDisplay:setDisplay,\n    changeCurrentPage:setCurrentPage,\n  };\n  return(\n    <SettingsContext.Provider value={state}>\n      {props.children}\n    </SettingsContext.Provider>\n  );\n}\n\nexport default SettingProvider;\n","/* eslint-disable no-undefined */\nimport React, { useState, useEffect,useContext } from 'react';\nimport { When } from '../if';\nimport Modal from '../modal';\nimport useForm from '../hooks/form.js';\nimport Header from '../header/header.js';\nimport Footer from '../footer/footer.js';\nimport Pagination from '../pagination/pagination.js';\nimport {SettingsContext} from '../context/setting.js';\n\nimport './todo.scss';\nconst todoAPI = 'https://api-js401.herokuapp.com/api/v1/todo';\n\n\nconst Todo2 = (props) =>{\n  const context = useContext(SettingsContext);\n\n  const addItem = () => {\n    const _updateState = newItem =>{\n      console.log('newItem : ', newItem);\n      return  setTodoList([...todoList, newItem]);};\n    callAPI( todoAPI, 'POST', values, _updateState );\n\n  };\n\n  // from form hook\n  const [handleSubmit, handleInput, handleChange, values] = useForm(addItem);\n  //\n  const [todoList,setTodoList] = useState([]);\n  const [showDetails,setShowDetails] = useState(false);\n  const [details,setDetails] = useState({});\n\n  const callAPI = (url, method = 'get', body, handler, errorHandler) => {\n    return fetch(url, {\n      method: method,\n      mode: 'cors',\n      cache: 'no-cache',\n      headers: { 'Content-Type': 'application/json' },\n      body: body ? JSON.stringify(body) : undefined,\n    })\n      .then(response => response.json())\n      .then(data => typeof handler === 'function' ? handler(data) : null )\n      .catch( (e) => typeof errorHandler === 'function' ? errorHandler(e) : console.error(e)  );\n  };\n\n  const deleteItem = id => {\n\n    const _updateState = (results) =>\n\n      setTodoList(todoList.filter(values => values._id !== id));\n\n    callAPI( `${todoAPI}/${id}`, 'DELETE', undefined, _updateState );\n\n  };\n\n  const saveItem = updatedItem => {\n\n    const _updateState = (newItem) =>\n      setTodoList(todoList.map(values =>\n        values._id === newItem._id ? newItem : values,\n      ));\n    callAPI( `${todoAPI}/${updatedItem._id}`, 'PUT', updatedItem, _updateState );\n\n  };\n\n  const toggleComplete = id => {\n    let values = todoList.filter(i => i._id === id)[0] || {};\n    if (values._id) {\n      values.complete = !values.complete;\n      saveItem(values);\n    }\n  };\n\n  const toggleDetails = id => {\n    let showDetails1 = ! showDetails;\n    let details1 = todoList.filter( values => values._id === id )[0] || {};\n    console.log('todoList : ', todoList);\n    setDetails(details1);\n    console.log('details : ', details);\n    setShowDetails(showDetails1);\n  };\n\n  const getTodoItems = () => {\n    const _updateState = data => setTodoList(data.results);\n    callAPI( todoAPI, 'GET', undefined, _updateState );\n  };\n\n  // Get current posts\n  const indexOfLastPost = context.currentPage * context.postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - context.postsPerPage;\n  const currentPosts = todoList.slice(indexOfFirstPost, indexOfLastPost);\n\n  //  // Change page\n  const paginate = pageNumber => context.changeCurrentPage(pageNumber);\n\n\n\n  useEffect(() => {\n    getTodoItems();\n  },[]);\n\n  const hide = () =>{\n    context.changeDisplay(false);\n  };\n  const show = () =>{\n    context.changeDisplay(true);\n  };\n\n  return (\n    <>\n      <Header todoList={todoList}/>\n\n      <section className=\"todo\">\n\n        <div>\n          <h3>Add Item</h3>\n          <form onSubmit={handleSubmit}>\n            <label>\n              <span>To Do Item</span>\n              <input\n                name=\"text\"\n                placeholder=\"Add To Do List Item\"\n                onChange={handleChange}\n              />\n            </label>\n            <label>\n              <span>Difficulty Rating</span>\n              <input type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" defaultValue=\"3\" onChange={handleChange} />\n            </label>\n            <label>\n              <span>Assigned To</span>\n              <input type=\"text\" name=\"assignee\" placeholder=\"Assigned To\" onChange={handleChange} />\n            </label>\n            <label>\n              <span>Due</span>\n              <input type=\"date\" name=\"due\" onChange={handleChange} />\n            </label>\n            <button>Add Item</button>\n          </form>\n        </div>\n\n        <div>\n          <ul>\n            { currentPosts.map(values => (\n              <li\n                className={`complete-${values.complete.toString()}-${context.display}`}\n                key={values._id}\n              >\n                <span onClick={() => toggleComplete(values._id)}>\n                  {values.text}\n                </span>\n                <button onClick={() => toggleDetails(values._id)}>\n                    Details\n                </button>\n                <button onClick={() => deleteItem(values._id)}>\n                    Delete\n                </button>\n              </li>\n            ))}\n          </ul>\n          <button onClick={hide}>Hide completed</button>\n          <button onClick={show}>Show completed</button>\n          <Pagination\n            postsPerPage={context.postsPerPage}\n            totalPosts={todoList.length}\n            paginate={paginate}\n            curent={context.currentPage}\n          />\n        </div>\n      </section>\n\n\n\n      <When condition={showDetails}>\n        <Modal title=\"To Do Item\" close={toggleDetails}>\n          <div className=\"todo-details\">\n            <header>\n              <span>Assigned To: {details.assignee}</span>\n              <span>Due: {details.due}</span>\n            </header>\n            <div className=\"item\">\n              {details.text}\n            </div>\n          </div>\n        </Modal>\n      </When>\n\n      <Footer/>\n    </>\n  );\n};\n\n\nexport default Todo2;\n","import React from 'react';\n\n// State Only\n// import ToDo from './components/todo/todo.js';\n\n// API Connected (Live Data)\nimport ToDo from './components/todo/todo-connected.js';\nimport SettingsProvider from './components/context/setting.js';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <SettingsProvider>\n        <div>\n          <ToDo />\n        </div>\n      </SettingsProvider>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}